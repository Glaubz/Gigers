// <auto-generated />
using System;
using Gigers.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gigers.Infra.Data.Migrations
{
    [DbContext(typeof(GigersContext))]
    [Migration("20220811010027_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gigers.Domain.Entidades.Gig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("Id");

                    b.ToTable("Gig");
                });

            modelBuilder.Entity("Gigers.Domain.Entidades.Giger", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("CHAR(11)")
                        .IsFixedLength(true);

                    b.Property<Guid?>("GigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(250)");

                    b.HasKey("Id");

                    b.HasIndex("GigId");

                    b.ToTable("Giger");
                });

            modelBuilder.Entity("Gigers.Domain.Entidades.Gig", b =>
                {
                    b.OwnsOne("Gigers.Domain.Entidades.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("GigId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CEP")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Cidade")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Numero")
                                .HasColumnType("int");

                            b1.Property<string>("Rua")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("GigId");

                            b1.ToTable("Gig");

                            b1.WithOwner()
                                .HasForeignKey("GigId");
                        });

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Gigers.Domain.Entidades.Giger", b =>
                {
                    b.HasOne("Gigers.Domain.Entidades.Gig", null)
                        .WithMany("Giger")
                        .HasForeignKey("GigId");

                    b.OwnsOne("Gigers.Domain.Entidades.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("GigerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("CEP")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Cidade")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("Numero")
                                .HasColumnType("int");

                            b1.Property<string>("Rua")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("GigerId");

                            b1.ToTable("Giger");

                            b1.WithOwner()
                                .HasForeignKey("GigerId");
                        });

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Gigers.Domain.Entidades.Gig", b =>
                {
                    b.Navigation("Giger");
                });
#pragma warning restore 612, 618
        }
    }
}
